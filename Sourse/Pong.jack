class Pong {
    field int ballX, ballY, ballDX, ballDY;
    field int leftPaddleY, rightPaddleY;
    field int левоеОчко, правоеОчко;
    field boolean флаг;
    field boolean stop;
    field int S;
    field int W;
    field int Down;
    field int Up;
    
    
    constructor Pong new() {
            let S = 119;
            let W = 115;
            let Down = 131;
            let Up = 133;
            return this;
        }

    //перезапуск мяча
    method void resetBall() {
        let ballX = 80;
        let ballY = 50;
        let ballDX = -1;
        let ballDY = -1;
        return;
    }
    
    // передвижение стенки
    method void movePaddles() {
        if (Keyboard.keyPressed() = S) {
            if (leftPaddleY > 4) { let leftPaddleY = leftPaddleY - 2; }
        }
        if (Keyboard.keyPressed() = W) {
            if (leftPaddleY < 80) { let leftPaddleY = leftPaddleY + 2; }
        }
        if (Keyboard.keyPressed() = Down) {
            if (rightPaddleY > 4) { let rightPaddleY = rightPaddleY - 2; }
        }
        if (Keyboard.keyPressed() = Up) {
            if (rightPaddleY < 80) { let rightPaddleY = rightPaddleY + 2; }
        }
        return;
    }
    
    // обработка движения и отскоков мяча
    method void moveBall() {
        let ballX = ballX + ballDX;
        let ballY = ballY + ballDY;
        let флаг = true;

        // отскок от верхней и нижней границы поля
        if ((ballY < 1) | (ballY > 99)) {
            let ballDY = ballDY * (-1);
        }

        // гол в правые ворота
        if (ballX > 157) {
            let левоеОчко = левоеОчко + 1;
            do resetBall();
        }

        // гол в левые ворота
        if (ballX < 2)
        {
            let правоеОчко = правоеОчко + 1;
            do resetBall();
        }

        // отскок шара от торца правой подвижной стенки
        if ((ballX > 151) & (ballX < 155) & (ballY > (rightPaddleY - 1)) & (ballY < (rightPaddleY + 21))){
            let ballDY = ballDY * (-1);
            let флаг = false;
        }

        // отскок шара от торца левой подвижной стенки
        if ((ballX > 4) & (ballX < 8) & (ballY > (leftPaddleY - 1)) & (ballY < (leftPaddleY + 21))){
            let ballDY = ballDY * (-1);
            let флаг = false;
        }

        // отскок шара от левой подвижной стенки
        if ((ballX < 9) & (ballX > 6) & (ballY > (leftPaddleY - 1)) & (ballY < (leftPaddleY + 21))) {
            // проверка не дает залететь шару в стенку через торец
            if (флаг = true){
            let ballDX = ballDX * -1;
            }
        }

        // отскок шара от правой подвижной стенки
        if ((ballX > 149) & (ballX < 152) & (ballY > (rightPaddleY - 1)) & (ballY < (rightPaddleY + 21))) {
            // проверка не дает залететь шару в стенку через торец
            if (флаг = true){
            let ballDX = ballDX * -1;
            }
        }
        
        // отскок шара от статичных боковых границ
        if(((ballX < 3) | (ballX > 156)) & (((ballY > 79) & (ballY < 101)) | ((ballY > 0) & (ballY < 21))))
        {
            let ballDX = ballDX * -1;
        }
        return;
    }
    
    method void run() {
        var Draw drawer;
        let drawer = Draw.new();
        let leftPaddleY = 40;
        let rightPaddleY = 40;
        let левоеОчко = 0;
        let правоеОчко = 0;
        do resetBall();

        while (~stop) {
            do movePaddles();
            do moveBall();
            let stop = drawer.draw(левоеОчко, правоеОчко, 
                leftPaddleY, rightPaddleY, 
                ballX, ballY,
                stop);
            do Sys.wait(10);
        }
        if (левоеОчко = 4){
            do drawer.drawPlayerWin(1);
        }
        else{
            do drawer.drawPlayerWin(2);
        }
        return;
    }
}
